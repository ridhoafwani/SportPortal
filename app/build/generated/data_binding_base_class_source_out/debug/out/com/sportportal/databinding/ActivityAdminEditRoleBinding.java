// Generated by view binder compiler. Do not edit!
package com.sportportal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.chip.Chip;
import com.google.android.material.chip.ChipGroup;
import com.sportportal.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAdminEditRoleBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Chip admin;

  @NonNull
  public final MaterialButton btnSave;

  @NonNull
  public final Chip customer;

  @NonNull
  public final TextView email;

  @NonNull
  public final CircleImageView image;

  @NonNull
  public final TextView name;

  @NonNull
  public final Chip penyedia;

  @NonNull
  public final TextView role;

  @NonNull
  public final ChipGroup roleGroup;

  @NonNull
  public final TextView selectType;

  private ActivityAdminEditRoleBinding(@NonNull FrameLayout rootView, @NonNull Chip admin,
      @NonNull MaterialButton btnSave, @NonNull Chip customer, @NonNull TextView email,
      @NonNull CircleImageView image, @NonNull TextView name, @NonNull Chip penyedia,
      @NonNull TextView role, @NonNull ChipGroup roleGroup, @NonNull TextView selectType) {
    this.rootView = rootView;
    this.admin = admin;
    this.btnSave = btnSave;
    this.customer = customer;
    this.email = email;
    this.image = image;
    this.name = name;
    this.penyedia = penyedia;
    this.role = role;
    this.roleGroup = roleGroup;
    this.selectType = selectType;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAdminEditRoleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAdminEditRoleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_admin_edit_role, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAdminEditRoleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.admin;
      Chip admin = ViewBindings.findChildViewById(rootView, id);
      if (admin == null) {
        break missingId;
      }

      id = R.id.btn_save;
      MaterialButton btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.customer;
      Chip customer = ViewBindings.findChildViewById(rootView, id);
      if (customer == null) {
        break missingId;
      }

      id = R.id.email;
      TextView email = ViewBindings.findChildViewById(rootView, id);
      if (email == null) {
        break missingId;
      }

      id = R.id.image;
      CircleImageView image = ViewBindings.findChildViewById(rootView, id);
      if (image == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.penyedia;
      Chip penyedia = ViewBindings.findChildViewById(rootView, id);
      if (penyedia == null) {
        break missingId;
      }

      id = R.id.role;
      TextView role = ViewBindings.findChildViewById(rootView, id);
      if (role == null) {
        break missingId;
      }

      id = R.id.role_group;
      ChipGroup roleGroup = ViewBindings.findChildViewById(rootView, id);
      if (roleGroup == null) {
        break missingId;
      }

      id = R.id.select_type;
      TextView selectType = ViewBindings.findChildViewById(rootView, id);
      if (selectType == null) {
        break missingId;
      }

      return new ActivityAdminEditRoleBinding((FrameLayout) rootView, admin, btnSave, customer,
          email, image, name, penyedia, role, roleGroup, selectType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
