// Generated by view binder compiler. Do not edit!
package com.sportportal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewStub;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.sportportal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCustomerBerandaBinding implements ViewBinding {
  @NonNull
  private final DrawerLayout rootView;

  @NonNull
  public final ViewStub emptyStateLayout;

  @NonNull
  public final LinearLayout filterAll;

  @NonNull
  public final LinearLayout filterBadminton;

  @NonNull
  public final LinearLayout filterBasket;

  @NonNull
  public final LinearLayout filterFutsall;

  @NonNull
  public final LinearLayout filterTenis;

  @NonNull
  public final LinearLayout filterVoli;

  @NonNull
  public final RecyclerView lapanganList;

  private ActivityCustomerBerandaBinding(@NonNull DrawerLayout rootView,
      @NonNull ViewStub emptyStateLayout, @NonNull LinearLayout filterAll,
      @NonNull LinearLayout filterBadminton, @NonNull LinearLayout filterBasket,
      @NonNull LinearLayout filterFutsall, @NonNull LinearLayout filterTenis,
      @NonNull LinearLayout filterVoli, @NonNull RecyclerView lapanganList) {
    this.rootView = rootView;
    this.emptyStateLayout = emptyStateLayout;
    this.filterAll = filterAll;
    this.filterBadminton = filterBadminton;
    this.filterBasket = filterBasket;
    this.filterFutsall = filterFutsall;
    this.filterTenis = filterTenis;
    this.filterVoli = filterVoli;
    this.lapanganList = lapanganList;
  }

  @Override
  @NonNull
  public DrawerLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCustomerBerandaBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCustomerBerandaBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_customer_beranda, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCustomerBerandaBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.emptyStateLayout;
      ViewStub emptyStateLayout = ViewBindings.findChildViewById(rootView, id);
      if (emptyStateLayout == null) {
        break missingId;
      }

      id = R.id.filter_all;
      LinearLayout filterAll = ViewBindings.findChildViewById(rootView, id);
      if (filterAll == null) {
        break missingId;
      }

      id = R.id.filter_badminton;
      LinearLayout filterBadminton = ViewBindings.findChildViewById(rootView, id);
      if (filterBadminton == null) {
        break missingId;
      }

      id = R.id.filter_basket;
      LinearLayout filterBasket = ViewBindings.findChildViewById(rootView, id);
      if (filterBasket == null) {
        break missingId;
      }

      id = R.id.filter_futsall;
      LinearLayout filterFutsall = ViewBindings.findChildViewById(rootView, id);
      if (filterFutsall == null) {
        break missingId;
      }

      id = R.id.filter_tenis;
      LinearLayout filterTenis = ViewBindings.findChildViewById(rootView, id);
      if (filterTenis == null) {
        break missingId;
      }

      id = R.id.filter_voli;
      LinearLayout filterVoli = ViewBindings.findChildViewById(rootView, id);
      if (filterVoli == null) {
        break missingId;
      }

      id = R.id.lapanganList;
      RecyclerView lapanganList = ViewBindings.findChildViewById(rootView, id);
      if (lapanganList == null) {
        break missingId;
      }

      return new ActivityCustomerBerandaBinding((DrawerLayout) rootView, emptyStateLayout,
          filterAll, filterBadminton, filterBasket, filterFutsall, filterTenis, filterVoli,
          lapanganList);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
