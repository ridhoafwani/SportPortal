// Generated by view binder compiler. Do not edit!
package com.sportportal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.sportportal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContentTransactionDetailsBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView amount;

  @NonNull
  public final TextView amountToPay;

  @NonNull
  public final TextView captionAmount;

  @NonNull
  public final TextView captionStatus;

  @NonNull
  public final TextView captionTag;

  @NonNull
  public final TextView captionType;

  @NonNull
  public final TextView cpExpiredAt;

  @NonNull
  public final TextView cpPayment;

  @NonNull
  public final ConstraintLayout detailView;

  @NonNull
  public final TextView expiredAt;

  @NonNull
  public final TextView paymentMethod;

  @NonNull
  public final TextView status;

  @NonNull
  public final TextView title;

  @NonNull
  public final TextView type;

  private ContentTransactionDetailsBinding(@NonNull CardView rootView, @NonNull TextView amount,
      @NonNull TextView amountToPay, @NonNull TextView captionAmount,
      @NonNull TextView captionStatus, @NonNull TextView captionTag, @NonNull TextView captionType,
      @NonNull TextView cpExpiredAt, @NonNull TextView cpPayment,
      @NonNull ConstraintLayout detailView, @NonNull TextView expiredAt,
      @NonNull TextView paymentMethod, @NonNull TextView status, @NonNull TextView title,
      @NonNull TextView type) {
    this.rootView = rootView;
    this.amount = amount;
    this.amountToPay = amountToPay;
    this.captionAmount = captionAmount;
    this.captionStatus = captionStatus;
    this.captionTag = captionTag;
    this.captionType = captionType;
    this.cpExpiredAt = cpExpiredAt;
    this.cpPayment = cpPayment;
    this.detailView = detailView;
    this.expiredAt = expiredAt;
    this.paymentMethod = paymentMethod;
    this.status = status;
    this.title = title;
    this.type = type;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentTransactionDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentTransactionDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_transaction_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentTransactionDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.amount;
      TextView amount = ViewBindings.findChildViewById(rootView, id);
      if (amount == null) {
        break missingId;
      }

      id = R.id.amount_to_pay;
      TextView amountToPay = ViewBindings.findChildViewById(rootView, id);
      if (amountToPay == null) {
        break missingId;
      }

      id = R.id.caption_amount;
      TextView captionAmount = ViewBindings.findChildViewById(rootView, id);
      if (captionAmount == null) {
        break missingId;
      }

      id = R.id.caption_status;
      TextView captionStatus = ViewBindings.findChildViewById(rootView, id);
      if (captionStatus == null) {
        break missingId;
      }

      id = R.id.caption_tag;
      TextView captionTag = ViewBindings.findChildViewById(rootView, id);
      if (captionTag == null) {
        break missingId;
      }

      id = R.id.caption_type;
      TextView captionType = ViewBindings.findChildViewById(rootView, id);
      if (captionType == null) {
        break missingId;
      }

      id = R.id.cp_expired_at;
      TextView cpExpiredAt = ViewBindings.findChildViewById(rootView, id);
      if (cpExpiredAt == null) {
        break missingId;
      }

      id = R.id.cp_payment;
      TextView cpPayment = ViewBindings.findChildViewById(rootView, id);
      if (cpPayment == null) {
        break missingId;
      }

      id = R.id.detail_view;
      ConstraintLayout detailView = ViewBindings.findChildViewById(rootView, id);
      if (detailView == null) {
        break missingId;
      }

      id = R.id.expired_at;
      TextView expiredAt = ViewBindings.findChildViewById(rootView, id);
      if (expiredAt == null) {
        break missingId;
      }

      id = R.id.payment_method;
      TextView paymentMethod = ViewBindings.findChildViewById(rootView, id);
      if (paymentMethod == null) {
        break missingId;
      }

      id = R.id.status;
      TextView status = ViewBindings.findChildViewById(rootView, id);
      if (status == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.type;
      TextView type = ViewBindings.findChildViewById(rootView, id);
      if (type == null) {
        break missingId;
      }

      return new ContentTransactionDetailsBinding((CardView) rootView, amount, amountToPay,
          captionAmount, captionStatus, captionTag, captionType, cpExpiredAt, cpPayment, detailView,
          expiredAt, paymentMethod, status, title, type);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
